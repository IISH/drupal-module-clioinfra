<?php

// A module to display the visualizations. The available visualizations will be configurable.

// TODO per viz: url, path, label, weight (1e = default), params, status (enabled), height
// Default visualizations exported, in code
// Implementation: entity type, custom schema, or variables?
// Menu: on-the-fly, or via hook_menu (= cached)


/**
 * Implements hook_menu().
 */
function clio_analyze_menu() {
  $items = array();
  $items['analyze'] = array(
    'title' => 'Analyze',
    'page callback' => 'clio_analyze_intro',
    'access arguments' => array('analyze datasets'),
    'expanded' => TRUE,
  );
  $items['admin/config/clio/analyze'] = array(
    'title'            => 'Analyze',
    'description'      => t('Configure Clio Infra visualization services'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('clio_analyze_config_form'),
    'access arguments' => array('administer clioinfra'),
  );
  return $items;
}


/**
 * Implements hook_permission().
 */
function clio_analyze_permission() {
  return array(
    'analyze datasets' => array(
      'title' => t('Analyze datasets'),
    ),
  );
}


/**
 * A page to display if no visualization is chosen.
 */
function clio_analyze_intro() {
  if ($default = variable_get('clio_analyze_default', '')) {
    drupal_goto('analyze/'. $default);
  }
  $content = 'Intro to analyzing datasets.';
  $output = array (
    'intro' => array(
      '#type' => 'markup',
      '#markup' => $content,
     )
  );
  return $output;
}


/**
 * Configuration form for API url's.
 */
// TODO Add parameters.
function clio_analyze_config_form($form, &$form_state) {
  $form = array();
  $form['clio_analyze_default'] = array(
    '#type'  => 'select',
    // TODO make this dynamic.
    '#options' => array('maps' => 'maps', 'graphs' => 'graphs', 'stats' => 'stats', 'charts' => 'charts'),
    '#title' => t('Default visualization'),
    '#description' => t('The default visualization to show.'),
    '#default_value' => variable_get('clio_analyze_default', ''),
//    '#element_validate' => array('clio_validate_api'),
  );
  return system_settings_form($form);
}


/*
 * Display a visualization.
 *
 * @param $viz
 *   The visualization identifier.
 * @param $query
 *   Array with visualization specific query parameters to send to the API.
 */
function clio_analyze_view($viz, $query = array()) {
  if (!in_array($viz, array('maps', 'graphs', 'stats', 'charts'))) {
    // Error.
  }
  $params = isset($_SESSION['clio']) ? $_SESSION['clio'] : array();
  $datasetid = isset($params['datasetid']) ? $params['datasetid'] : '';
  $yearmin   = isset($params['year']) ? $params['year']['min'] : '';
  $yearmax   = isset($params['year']) ? $params['year']['max'] : '';
  $startyear = isset($params['startyear']) ? $params['startyear'] : '';
  $endyear   = isset($params['endyear']) ? $params['endyear'] : '';
  $type      = isset($params['type']) && $params['type'][0] == 'historical' ? 'on' : '';
  $countrylist = isset($params['country']) ? implode(',', $params['country']) : '';

  $config = variable_get('clio_analyze_' . $viz, array());
  $api    = isset($config['api']) ? $config['api'] : '';
  $height = isset($config['height']) ? $config['height'] : '500';

  $content = '';

  if (!($datasetid)) {
    drupal_set_message(t('Incorrect dataset id.'), 'error');
  }
  else if (!$api) {
    drupal_set_message(t('The visualization is not configured correctly.'), 'error');
  }
  else {
    $query = array_merge($query, 
      array(
        'start' => 'on',
        'hist' => $type,
        'handle' => $datasetid,
        'ctrlist' => $countrylist,
        'yearmin' => $yearmin,
        'yearmax' => $yearmax,
      )
    );
    $url = url($api, array('query' => $query));
    $content = '<div id="external-site-container" height="100%">
    <iframe id="external-site" src="'. $url .'" scrolling="auto" frameBorder="0" height="' . $height . '" width="100%" />
      <h3>Your browser does not support iframes. <a href="'. $url . '" title="' . $url . '">Click here to view the page you selected</a>.</h3>
    </iframe>
    </div>';
  }
  
  $output = array (
    'vizualization' => array(
      '#type' => 'markup',
      '#markup' => $content,
     ),
     'form1' => drupal_get_form('clio_search_type_form'),
     'form2' => drupal_get_form('clio_search_select_form'),
  );
  if (CLIO_DEBUG && $content) {
    $output['debug'] = array(
      '#type' => 'markup',
      '#markup' => '<div>Debug data: '. $datasetid . ' / '. l('query', $api, array('query' => $query)) . '</div>',
    );
  }
  return $output;
}

