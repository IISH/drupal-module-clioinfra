<?php

// A module to display the statistical visualization.

/**
 * Implements hook_menu().
 */
function clio_analyze_stats_menu() {
  $items = array();
  $type = variable_get('clio_analyze_default', '') == 'stats' ? MENU_DEFAULT_LOCAL_TASK : MENU_LOCAL_TASK;
  $items['analyze/stats'] = array(
    'title'            => 'Stats',
    'page callback'    => "clio_analyze_stats_view",
    'access arguments' => array('analyze datasets'),
    'type'             => $type,
    'weight'           => 3,
  );
  return $items;
}


/**
 * Add API url to configuration form.
 */
// TODO Add parameters.
function clio_analyze_stats_form_clio_analyze_config_form_alter(&$form, &$form_state, $form_id) {
  $config = variable_get('clio_analyze_stats', array());
  $form['clio_analyze_stats'] = array(
    '#type' => 'fieldset',
    '#title' => t('Stats'),
    '#tree' => TRUE,
    '#collapsible' => TRUE, 
    '#collapsed' => FALSE,
  );
  $form['clio_analyze_stats']['api'] = array(
    '#type'  => 'textfield',
    '#title' => t('API'),
    '#description' => t('The url of the API providing the stats.'),
    '#default_value' => isset($config['api']) ? $config['api'] : '',
    // TODO Validate function does not work for tree children:
    // Notice: Undefined index: clio_analyze_stats[api] in clio_validate_api() 
    // '#element_validate' => array('clio_validate_api'),
  );
  $form['clio_analyze_stats']['height'] = array(
    '#type'  => 'textfield',
    '#title' => t('Height'),
    '#size' => 4,
    '#maxlength' => 4,
    '#field_suffix' => 'px',
    '#description' => t('The height of the iframe.'),
    '#default_value' => isset($config['height']) ? $config['height'] : '500',
  );
  $form['#submit'][] = 'clio_analyze_stats_config_submit';
}


function clio_analyze_stats_config_submit(&$form, &$form_state) {
  $settings = $form_state['values']['clio_analyze_stats'];
  foreach ($settings as $key => $value) {
    if (!$value['api']) {
      unset($settings[$key]);
    }
  }
  variable_set('clio_analyze_stats', $settings);
}


/*
 * Display the visualization.
 */
function clio_analyze_stats_view() {
  $query = array(
    'aggr' => 'on',
  );
  return clio_analyze_view('stats', $query);
}
