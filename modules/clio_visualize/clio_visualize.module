<?php

// A module to display the visualizations. The available visualizations will be configurable.

/**
 * Implements hook_menu().
 */
function clio_visualize_menu() {
  $items = array();
  $items['visualize'] = array(
    'title' => 'Visualize',
    'page callback' => 'clio_visualize_intro',
    'access arguments' => array('visualize datasets'),
    'expanded' => TRUE,
  );
  $items['visualize/%'] = array(
    'title'            => 'Maps',
    'page callback'    => 'clio_visualize_maps',
    'page arguments'   => array(1),
    'access arguments' => array('visualize datasets'),
    'type'             => MENU_CALLBACK,
  );
  $items['visualize/%/maps'] = array(
    'title'            => 'Maps',
    'type'             => MENU_DEFAULT_LOCAL_TASK,
    'weight'           => 1,
  );
  $items['visualize/%/graphs'] = array(
    'title'            => 'Graphs',
    'page callback'    => 'clio_visualize_graphs',
    'page arguments'   => array(1),
    'access arguments' => array('visualize datasets'),
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 2,
  );  
  $items['visualize/%/stats'] = array(
    'title'            => 'Stats',
    'page callback'    => 'clio_visualize_stats',
    'page arguments'   => array(1),
    'access arguments' => array('visualize datasets'),
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 2,
  );  
  $items['admin/config/clio/visualize'] = array(
    'title'            => 'Visualize',
    'description'      => t('Configure Clio Infra visualization services'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('clio_visualize_config_form'),
    'access arguments' => array('administer clioinfra'),
  );
  return $items;
}


/**
 * Implements hook_permission().
 */
function clio_visualize_permission() {
  return array(
    'visualize datasets' => array(
      'title' => t('Visualize datasets'),
    ),
  );
}


function clio_visualize_intro() {
  $content = 'Intro to visualization.';
  $output = array (
    'maps' => array(
      '#type' => 'markup',
      '#markup' => $content,
     )
  );
  return $output;
}


function clio_visualize_libraries_info() {
  $libraries['d3'] = array(
    'name' => 'D3',
    'vendor url' => 'http://d3js.org/',
    'download url' => 'http://d3js.org/',
    'files' => array(
      'js' => array(
        'd3.min.js',
      ),
    ),
    'version arguments' => array(
      'file' => 'd3.min.js',
      'pattern' => '/version\:\"([0-9\.]*)\"/',
      'lines' => 3,
      'cols' => 40000,
    ),
  );
  $libraries['topojson'] = array(
    'name' => 'TopoJSON',
    'vendor url' => 'https://github.com/mbostock/topojson',
    'download url' => 'https://github.com/mbostock/topojson/archive/master.zip',
    'files' => array(
      'js' => array(
        'topojson.js',
      ),
    ),
    'version arguments' => array(
      'file' => 'topojson.js',
      'pattern' => '/version\: \"([0-9\.]*)\"/',
      'lines' => 3,
      'cols' => 40,
    ),
  );
  $libraries['d3.tip'] = array(
    'name' => 'd3-tip',
    'vendor url' => 'https://github.com/Caged/d3-tip',
    'download url' => 'https://raw.github.com/Caged/d3-tip/master/index.js',
    'version' => '0.0',
    'files' => array(
      'js' => array(
        'index.js',
      ),
    ),
  );  
  $libraries['d3.geo.projection'] = array(
    'name' => 'd3.geo.projection',
    'vendor url' => 'https://github.com/d3/d3-geo-projection/',
    'download url' => 'https://github.com/d3/d3-geo-projection/archive/master.zip',
    'version' => '0.0',
    'files' => array(
      'js' => array(
        'd3.geo.projection.min.js',
      ),
    ),
  );  
  $libraries['d3.svg.legend'] = array(
    'name' => 'd3-svg-legend',
    'vendor url' => 'https://github.com/emeeks/d3-svg-legend',
    'download url' => 'https://github.com/emeeks/d3-svg-legend/archive/master.zip',
    'version' => '0.0',
    'files' => array(
      'js' => array(
        'legend.js',
      ),
    ),
  );
  return $libraries;
}


// TODO Add parameters.
function clio_visualize_config_form($form, &$form_state) {
  $form = array();
  $form['clio_visualize_map_api'] = array(
    '#type'  => 'textfield',
    '#title' => t('Map API'),
    '#description' => t('The url of the API providing the maps.'),
    '#default_value' => variable_get('clio_visualize_map_api', ''),
    '#element_validate' => array('clio_validate_api'),
  );
  $form['clio_visualize_data_api'] = array(
    '#type'  => 'textfield',
    '#title' => t('Data API'),
    '#description' => t('The url of the API providing the dataset data.'),
    '#default_value' => variable_get('clio_visualize_data_api', ''),
    '#element_validate' => array('clio_validate_api'),
  );
  return system_settings_form($form);
}


/*
 *
 */
function clio_visualize_maps($datasetid) {
  // TODO Validate for realz.
  $datasetid = isset($datasetid) ? rawurldecode($datasetid) : '';
  // TODO: initial year dynamically computed in js?

  // Temporary values.
  // Where does 26:27 come from?
  $datasetid = 'hdl:10622/EKPBIZ:26:27';
  $year = 1980;
  $settings = array(
    'mapapi' => variable_get('clio_visualize_map_api', ''),
    'datapi' => variable_get('clio_visualize_data_api', ''),
    'year'   => $year,
    'handle' => $datasetid,
    'div'    => 'map',
  );
  $content = '<div class="map"></div>';

  if (!($datasetid)) {
    drupal_set_message(t('Incorrect dataset id.'), 'error');
  }
  else if (!($settings['mapapi'] && $settings['datapi'])) {
    drupal_set_message(t('The visualization is not configured correctly.'), 'error');
  }
  else {
    libraries_load('d3');
    libraries_load('d3.tip');
    libraries_load('d3.geo.projection');
    libraries_load('d3.svg.legend');
    libraries_load('topojson');
    drupal_add_css(drupal_get_path('module', 'clio_visualize') . "/css/clio-visualize.css");  
    drupal_add_js(drupal_get_path('module', 'clio_visualize') . "/js/clio-visualize-maps.js");  
    drupal_add_js(array('clioVisualize' => $settings), 'setting');
  }
  $content .= $datasetid;
  $output = array (
    'maps' => array(
      '#type' => 'markup',
      '#markup' => $content,
     )
  );
  return $output;
}


function clio_visualize_graphs($datasetid) {
  $content = 'graphs';
  $output = array (
    'maps' => array(
      '#type' => 'markup',
      '#markup' => $content,
     )
  );
  return $output;
}


function clio_visualize_stats($datasetid) {
  $content = 'stats';
  $output = array (
    'maps' => array(
      '#type' => 'markup',
      '#markup' => $content,
     )
  );
  return $output;
}

